<%= render 'layouts/header'%>
<div class="fluid-container">
  <div class="row">

    <div class="col-md-10 col-md-offset-1">
      <input class="text-center" type="search" placeholder="Entrez un mot-clef" name="the_search" id="search">

      <div id="map"></div>

    </div>
</div>


<script>
var articles = <%= @articles.all.map{|a|{path:article_path(a),position:{lat:a.latitude, lng: a.longitude}, notions:a.notions, title:a.titre}}.to_json.html_safe %>;
var map, mapOptions, markers;

function initMap(){
  var styles = [
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "hue": "#000000"
            },
            {
                "saturation": -100
            },
            {
                "lightness": -100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "hue": "#000000"
            },
            {
                "saturation": -100
            },
            {
                "lightness": -100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "all",
        "stylers": [
            {
                "hue": "#000000"
            },
            {
                "saturation": 0
            },
            {
                "lightness": -100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "labels",
        "stylers": [
            {
                "hue": "#ffffff"
            },
            {
                "saturation": -100
            },
            {
                "lightness": 100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "labels",
        "stylers": [
            {
                "hue": "#000000"
            },
            {
                "saturation": -100
            },
            {
                "lightness": -100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "all",
        "stylers": [
            {
                "hue": "#ffffff"
            },
            {
                "saturation": -100
            },
            {
                "lightness": 100
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
            {
                "hue": "#ffffff"
            },
            {
                "saturation": -100
            },
            {
                "lightness": 100
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "labels",
        "stylers": [
            {
                "hue": "#000000"
            },
            {
                "saturation": 0
            },
            {
                "lightness": -100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "labels",
        "stylers": [
            {
                "hue": "#000000"
            },
            {
                "saturation": -100
            },
            {
                "lightness": -100
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "geometry",
        "stylers": [
            {
                "hue": "#bbbbbb"
            },
            {
                "saturation": -100
            },
            {
                "lightness": 26
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "geometry",
        "stylers": [
            {
                "hue": "#dddddd"
            },
            {
                "saturation": -100
            },
            {
                "lightness": -3
            },
            {
                "visibility": "on"
            }
        ]
    }
  ]
  // Create a new StyledMapType object, passing it the array of styles,
  // as well as the name to be displayed on the map type control.
  var styledMap = new google.maps.StyledMapType(styles, {name: "map_style"});
  // Create a map object and specify the DOM element for display.

  mapOptions = {
  zoom: 2,
  center: new google.maps.LatLng(0, 0),
  scrollwheel: false,
  mapTypeControlOptions: {
    mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
  }
  };
  map = new google.maps.Map(document.getElementById('map'), mapOptions);

  map.mapTypes.set('map_style', styledMap);
  map.setMapTypeId('map_style');
  var article, marker;
  markers=[];
  for(var i=0; i<articles.length; i++) {
    article = articles[i];
    if(article.position.lat !== null && article.position.lng !== null){
      marker = new google.maps.Marker({
        position: article.position,
        map: map,
        title: article.title,
        icon: "/marker.png"
      });
      markers.push(marker);

      markers[markers.length-1].article = article;
      marker.addListener('click',(function(article){
        return function(){
          window.location.href = article.path;
        };
      })(article));
    }

  }
}

var search = {
  notions: [],
  find: function(query) {
    var articles = [];
    if (query != "") {
      var pattern = new RegExp(query.toLowerCase());
      console.log(pattern);
      console.log(markers)
      //Parcours les markers
      for(j=0; j<markers.length; j++) {
        //Parcourst les notions
        var display = false;
        for(k=0; k<markers[j].article.notions.length; k++){
          //Si l'article contient la notion
          if(markers[j].article.notions[k].name.match(pattern, "i")){
            display = true;
          }
        }
        console.log(markers[j].article, display);
        if(display){
          if(!markers[j].map){
            markers[j].setMap(map);
          }
        } else {
          markers[j].setMap(null);
        }
      }
    } else {
      for(i=0; i<markers.length; i++){
        markers[i].setMap(map);
      }
    }
  }
}

window.addEventListener("load",function(){
  var input = document.querySelector("#search");
  if (input) {
    input.addEventListener("keydown", function(){
      console.log(markers);
      setTimeout(function(){
        search.find(input.value);
      },1);
    });
    }
});

  //Associate the styled map with the MapTypeId and set it to display.
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDC9g-0QYUlFJAlEbMJJwC_KflEQz8DBz8&callback=initMap" async defer></script>
